%define rpm_name     #RPM_NAME#
%define rpm_version  #RPM_VERSION#
%define rpm_release  #RPM_RELEASE#
%define rpm_packager #RPM_PACKAGER#

%global _hardened_build 1
%define libname %{rpm_name}-%{rpm_version}
# FIXME non-standard directory for storing *.so objects
%{?filter_setup:
%filter_provides_in %{_libdir}/%{libname}/priv/lib/.*\.so$
%filter_setup
}

Name:       %{rpm_name}
Version:    %{rpm_version}
Release:    %{rpm_release}%{?dist}
Summary:    A distributed, fault-tolerant Jabber/XMPP server

Group:      Applications/Internet
License:    GPLv2+
URL:        http://www.ejabberd.im/
%if 0%{?el7}%{?fedora}
VCS:        scm:git:https://github.com/processone/ejabberd.git
%endif
Source0:    https://github.com/processone/#RPM_NAME#/archive/#RPM_VERSION#.tar.gz
Source1:    ejabberd.init
Source2:    ejabberd.logrotate
Source3:	ejabberd.sysconfig

# Support for systemd
Source4:    ejabberd.service
Source5:    ejabberd.tmpfiles.conf

# PAM support
Source9:        ejabberdctl.pam
Source11:       ejabberd.pam

# usermode support for old systems
Source10:	ejabberdctl.apps
# polkit support
Source12:	ejabberdctl.polkit.actions
Source13:	ejabberdctl.polkit.rules

# Use ejabberd as an example for PAM service name (fedora/epel-specific)
Patch1: ejabberd-0001-Fix-PAM-service-example-name-to-match-actual-one.patch
# https://github.com/processone/ejabberd/issues/1850
Patch2: ejabberd-0002-Drop-post_hook_configure-from-rebar.config.patch
# Fedora-specific
Patch3: ejabberd-0003-Install-into-BINDIR-instead-of-SBINDIR.patch
# Fedora-specific
Patch4: ejabberd-0004-Enable-systemd-notification-if-available.patch

BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)

BuildRequires:  expat-devel >= 1.95
BuildRequires:  libyaml-devel >= 0.1.3
BuildRequires:  openssl-devel >= 1.0.0
BuildRequires:  pam-devel
BuildRequires:  erlang >= 17.5
BuildRequires:	autoconf
BuildRequires:	automake
BuildRequires:	gcc
BuildRequires:	gcc-c++

# For creating user and group
Requires(pre):		shadow-utils

Requires(post): /usr/bin/openssl
%if 0%{?el6}
Requires(post): /sbin/chkconfig
Requires(preun): /sbin/chkconfig
Requires(preun): /sbin/service
Requires(postun): /sbin/service
%else
Requires(post): systemd
Requires(preun): systemd
Requires(postun): systemd
%endif

Provides: user(%{name})
Provides: group(%{name})

#Error:erlang(exmpp_jid:domain_as_list/1)
#Error:erlang(exmpp_jid:make/2)
#Error:erlang(exmpp_jid:node_as_list/1)
#Error:erlang(exmpp_jid:parse/1)
#Error:erlang(exmpp_jid:prep_domain_as_list/1)
#Error:erlang(exmpp_jid:prep_node_as_list/1)
#Error:erlang(exmpp_jid:prep_resource_as_list/1)
#Error:erlang(exmpp_jid:resource_as_list/1)
#Error:erlang(exmpp:start/0)
#Error:erlang(exmpp_xml:document_to_list/1)
#Error:erlang(exmpp_xml:foreach/2)
#Error:erlang(exmpp_xml:get_attribute/3)
#Error:erlang(exmpp_xml:get_attribute_as_list/3)
#Error:erlang(exmpp_xml:get_element/2)
#Error:erlang(exmpp_xml:get_elements/2)
#Error:erlang(exmpp_xml:parse/2)
#Error:erlang(exmpp_xml:start_parser/1)
#Error:erlang(exmpp_xml:stop_parser/1)
#Error:erlang(exmpp_xml:xmlelement_to_xmlel/1)
#Error:erlang(exmpp_xml:xmlel_to_xmlelement/1)
#Error:erlang(mysql_conn:fetch/3)
#Error:erlang(mysql_conn:start/6)
#Error:erlang(mysql_conn:stop/1)
#Error:erlang(mysql:get_result_affected_rows/1)
#Error:erlang(mysql:get_result_field_info/1)
#Error:erlang(mysql:get_result_reason/1)
#Error:erlang(mysql:get_result_rows/1)
#Error:erlang(release_handler_1:eval_script/3)
#Error:erlang(ssl:seed/1)
Requires:       expat >= 1.95
Requires:       libyaml >= 0.1.3
Requires:       openssl >= 1.0.0
Requires:       erlang >= 17.5
#Error:erlang(esasl:str_error/2)
#Requires:       erlang-esasl
%if 0%{?el6}
Requires:       usermode
%else
# for /usr/bin/pkexec
Requires:       polkit
%endif
# for flock in ejabberdctl
Requires:	util-linux


%description
ejabberd is a Free and Open Source distributed fault-tolerant
Jabber/XMPP server. It is mostly written in Erlang, and runs on many
platforms (tested on Linux, FreeBSD, NetBSD, Solaris, Mac OS X and
Windows NT/2000/XP).

%prep
%setup -q

%patch1 -p1 -b .pam_name
%patch2 -p1 -b .post_hook
%patch3 -p1 -b .usr_bin
%if ! 0%{?el6}
%patch4 -p1 -b .systemd_notif
%endif


%build
#pushd src
# Fix version number in configure.ac if it's not a git repo
sed -i -r -e "s/AC_INIT\(([^,]+),([^,]+),([^,]+),([^,]+)\)/AC_INIT\(\1, %{version},\3,\4\)/" configure.ac
./autogen.sh
#autoreconf -ivf
%configure --enable-odbc --enable-mysql --enable-pgsql --enable-pam
# doesn't build on SMP currently
make
#popd


%install
rm -rf %{buildroot}

make install DESTDIR=%{buildroot}

install -d -m 0750 %{buildroot}%{_sysconfdir}/%{name}
install -D -p -m 0644 ejabberd.yml.example %{buildroot}%{_sysconfdir}/%{name}/ejabberd.yml
install -D -p -m 0644 ejabberdctl.cfg.example %{buildroot}%{_sysconfdir}/%{name}/ejabberdctl.cfg
install -D -p -m 0644 inetrc %{buildroot}%{_sysconfdir}/%{name}/inetrc

install -d -m 0750 %{buildroot}/var/lib/ejabberd/spool
install -d -m 0750 %{buildroot}/var/lock/ejabberdctl
install -d -m 0750 %{buildroot}/var/log/ejabberd

# fix example SSL certificate path to real one, which we created recently (see above)
%{__perl} -pi -e 's!/path/to/ssl.pem!/etc/ejabberd/ejabberd.pem!g' %{buildroot}/etc/ejabberd/ejabberd.yml

install -D -p -m 0755 tools/captcha.sh %{buildroot}%{_libdir}/%{libname}/priv/bin/captcha.sh
# fix captcha path
%{__perl} -pi -e 's!/lib/ejabberd/priv/bin/captcha.sh!%{_libdir}/%{name}/priv/bin/captcha.sh!g' %{buildroot}/etc/ejabberd/ejabberd.yml

install -D -p -m 0644 %{S:9} %{buildroot}%{_sysconfdir}/pam.d/ejabberdctl
install -D -p -m 0644 %{S:11} %{buildroot}%{_sysconfdir}/pam.d/ejabberd

%if 0%{?el6}
# install init-script
install -D -p -m 0755 %{S:1} %{buildroot}%{_initrddir}/ejabberd
# install sysconfig file
install -D -p -m 0644  %{S:3} %{buildroot}%{_sysconfdir}/sysconfig/ejabberd
%else
# install systemd entry
install -D -m 0644 -p %{S:4} %{buildroot}%{_unitdir}/%{name}.service
install -D -m 0644 -p %{S:5} %{buildroot}%{_tmpfilesdir}/%{name}.conf
%endif

# install config for logrotate
install -D -p -m 0644  %{S:2} %{buildroot}%{_sysconfdir}/logrotate.d/ejabberd

# create room for necessary data
install -d %{buildroot}%{_datadir}/%{name}
# install sql-scripts for creating db schemes for various RDBMS
#install -p -m 0644 sql/lite.sql %{buildroot}%{_datadir}/%{name}
#install -p -m 0644 sql/mssql.sql %{buildroot}%{_datadir}/%{name}
install -p -m 0644 sql/mysql.sql %{buildroot}%{_datadir}/%{name}
install -p -m 0644 sql/pg.sql %{buildroot}%{_datadir}/%{name}

# Fix permissions for captcha script
# In fact, we can also chown root:ejabberd here, but I'm not sure
# that we should care about the possibility of reading by someone
# for this *default* script, which is not intended to be changed
chmod 755 %{buildroot}%{_libdir}/%{libname}/priv/bin/captcha.sh

%if 0%{?el6}
# Use usermode on old systems
mkdir -p %{buildroot}%{_bindir}
ln -s consolehelper %{buildroot}%{_bindir}/ejabberdctl
install -D -p -m 0644 %{S:10} %{buildroot}%{_sysconfdir}/security/console.apps/ejabberdctl
%else
# Use polkit
install -D -p -m 0644 %{S:12} %{buildroot}%{_datadir}/polkit-1/actions/ejabberdctl.policy
install -D -p -m 0644 %{S:13} %{buildroot}%{_datadir}/polkit-1/rules.d/51-ejabberdctl.rules
%endif

# Remove installed doc-files
rm -rf %{buildroot}%{_defaultdocdir}


%pre
getent group %{name} >/dev/null || groupadd -r %{name}
getent passwd %{name} >/dev/null || \
useradd -r -g %{name} -d %{_localstatedir}/lib/%{name} -s /sbin/nologin -M \
-c "ejabberd" %{name} 2>/dev/null || :


if [ $1 -gt 1 ]; then
	# we should backup DB in every upgrade
	if ejabberdctl status >/dev/null ; then
		# Use timestamp to make database restoring easier
		TIME=$(date +%%Y-%%m-%%dT%%H:%%M:%%S)
		BACKUPDIR=$(mktemp -d -p /var/tmp/ ejabberd-$TIME.XXXXXX)
		chown ejabberd:ejabberd $BACKUPDIR
		BACKUP=$BACKUPDIR/ejabberd-database
		ejabberdctl backup $BACKUP
		# Change ownership to root:root because ejabberd user might be
		# removed on package removal.
		chown -R root:root $BACKUPDIR
		chmod 700 $BACKUPDIR
		echo
		echo The ejabberd database has been backed up to $BACKUP.
		echo
	fi

	# fix cookie path (since ver. 2.1.0 cookie stored in /var/lib/ejabberd/spool
	# rather than in /var/lib/ejabberd
	if [ -f /var/lib/ejabberd/.erlang.cookie ]; then
		cp -pu /var/lib/ejabberd/{,spool/}.erlang.cookie
		echo
		echo The ejabberd cookie file was moved.
		echo Please delete old one from /var/lib/ejabberd/.erlang.cookie
		echo
	fi
fi


%post
%if 0%{?el6}
if [ $1 -eq 1 ]; then
	# Initial installation
	/sbin/chkconfig --add %{name} || :
fi
%else
%systemd_post %{name}.service
%endif

# Create SSL certificate with default values if it doesn't exist
(cd /etc/ejabberd
if [ ! -f ejabberd.pem ]
then
    echo "Generating SSL certificate /etc/ejabberd/ejabberd.pem..."
    HOSTNAME=$(hostname -s 2>/dev/null || echo "localhost")
    DOMAINNAME=$(hostname -d 2>/dev/null || echo "localdomain")
    openssl req -new -x509 -days 365 -nodes -out ejabberd.pem \
                -keyout ejabberd.pem > /dev/null 2>&1 <<+++
.
.
.
$DOMAINNAME
$HOSTNAME
ejabberd
root@$HOSTNAME.$DOMAINNAME
+++
chown ejabberd:ejabberd ejabberd.pem
chmod 600 ejabberd.pem
fi)


%preun
%if 0%{?el6}
if [ $1 -eq 0 ]; then
	# Package removal, not upgrade
        /sbin/service %{name} stop >/dev/null 2>&1 || :
        /sbin/chkconfig --del %{name} || :
fi
%else
%systemd_preun %{name}.service
%endif


%postun
%if 0%{?el6}
if [ $1 -ge 1 ]; then
	# Package upgrade, not uninstall
	/sbin/service %{name} condrestart >/dev/null 2>&1
fi
%else
%systemd_postun_with_restart %{name}.service
%endif


%clean
rm -rf %{buildroot}


%files
%doc COPYING

%attr(750,ejabberd,ejabberd) %dir %{_sysconfdir}/ejabberd
%attr(640,ejabberd,ejabberd) %config(noreplace) %{_sysconfdir}/ejabberd/ejabberd.yml
%attr(640,ejabberd,ejabberd) %config(noreplace) %{_sysconfdir}/ejabberd/ejabberdctl.cfg
%attr(640,ejabberd,ejabberd) %config(noreplace) %{_sysconfdir}/ejabberd/inetrc

%if 0%{?el6}
%config(noreplace) %{_sysconfdir}/sysconfig/%{name}
%{_initrddir}/%{name}
%else
%{_unitdir}/%{name}.service
%{_tmpfilesdir}/%{name}.conf
%endif

%config(noreplace) %{_sysconfdir}/logrotate.d/%{name}
%config(noreplace) %{_sysconfdir}/pam.d/%{name}
%config(noreplace) %{_sysconfdir}/pam.d/ejabberdctl
%if 0%{?el6}
%config(noreplace) %{_sysconfdir}/security/console.apps/ejabberdctl
%else
%{_datadir}/polkit-1/actions/ejabberdctl.policy
%{_datadir}/polkit-1/rules.d/51-ejabberdctl.rules
%endif
%{_bindir}/ejabberdctl

#%dir %{_libdir}/%{libname}
#%dir %{_libdir}/%{libname}/ebin
#%dir %{_libdir}/%{libname}/include
#%dir %{_libdir}/%{libname}/priv
#%dir %{_libdir}/%{libname}/priv/bin
#%dir %{_libdir}/%{libname}/priv/sql
#%dir %{_libdir}/%{libname}/priv/msgs

%{_libdir}/*
#%{_libdir}/%{libname}/ebin/%{name}.app
#%{_libdir}/%{libname}/ebin/*.beam
#%{_libdir}/%{libname}/include/*.hrl
#%{_libdir}/%{libname}/priv/bin/captcha.sh
#%{_libdir}/%{libname}/priv/sql/*.sql
#%{_libdir}/%{libname}/priv/msgs/*.msg

%dir %{_datadir}/%{name}
#%{_datadir}/%{name}/lite.sql
#%{_datadir}/%{name}/mssql.sql
%{_datadir}/%{name}/mysql.sql
%{_datadir}/%{name}/pg.sql

%attr(750,ejabberd,ejabberd) %dir /var/lib/ejabberd
%attr(750,ejabberd,ejabberd) %dir /var/lib/ejabberd/spool
%attr(750,ejabberd,ejabberd) %dir /var/lock/ejabberdctl
%attr(750,ejabberd,ejabberd) %dir /var/log/ejabberd


%changelog
%include %{_specdir}/changelog
